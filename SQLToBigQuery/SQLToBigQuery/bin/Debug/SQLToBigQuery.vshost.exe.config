<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler,Log4net" />
  </configSections>
  <appSettings>
    <add key="SQL_SrcTable" value="" />
    <!-- ignored if SQL_SelectStatement value is not empty -->
    <add key="SQL_ConnStr" value="" />
    <add key="SQL_RowLimitPerFile" value="100000" />
    <add key="SQL_TimeColumn" value="" />
    <!-- optional -->
    <add key="SQL_SelectStatement" value="" />
    <!-- optional, if left empty SELECT * will be used -->
    <add key="Google_CredentialFile" value="" />
    <!-- <add key="Google_CredentialFile" value="c:\google_credentials\oauthcred.json" /> -->
    <add key="Google_ServiceAccountEmail" value="" />
    <!-- <add key="Google_ServiceAccountEmail" value="notarealaccount@mycompany-555555.iam.gserviceaccount.com" /> -->
    <add key="Google_ServiceAccountCredentialFile" value="" />
    <!-- <add key="Google_ServiceAccountCredentialFile" value="c:\google_credentials\notarealkey76-ffd19dcf8c33.p12" /> -->
    <!-- same export as our oauthcred.json but in p12. To perform the end-to-emd workflow both are required due to a strange bug in Google's API for .NET -->
    <!-- you can generate both inside Google's Storage Console admin console under API credentials here: https://console.cloud.google.com/apis/credentials -->
    <add key="Google_ServiceAccountCredentialPassword" value="notasecret" />
    <!-- swap out the obvious below with your information -->
    <add key="Google_StorageProjectID" value="mycompany-555555" />
    <add key="Google_StorageAppName" value="" />
    <add key="Google_StorageBucket" value="" />
    <add key="Google_StorageDelimiter" value="," />
    <add key="Google_StorageFileExt" value=".csv" />
    <add key="Google_StorageFileName" value="fsites_" />
    <add key="Google_UseSessionIDForFileName" value="true" />
    <add key="Google_CreateBigQueryTable" value="true" />
    <add key="Google_BigQueryProjectID" value="mycompany-555555" />
    <add key="Google_BigQueryDatasetName" value="mydataset" />
    <add key="Google_BigQueryTableName" value="my_table" />
    <!-- format for Google_BigQueryColumnMap is: [sqldatatype]|[columnname],[sqldatatype]|[columnname]... Do not specify type size. e.g. varchar|fname,varchar|lname,int|age -->
    <add key="Google_BigQueryColumnMap" value="" />
    <add key="WaitForKeyPressToExit" value="true" />
    <!-- Google_BigQueryColumnMap is optional if SQL_SelectStatement is empty. -->
    <add key="ClientSettingsProvider.ServiceUri" value="" />
  </appSettings>
  <log4net>
    <appender name="TestAppender" type="log4net.Appender.RollingFileAppender">
      <file value="SQLToBigQuery.log" />
      <encoding value="utf-8" />
      <appendToFile value="true" />
      <rollingStyle value="Date" />
      <!--<rollingStyle value="Size" />
      <maxSizeRollBackups value="5" />
      <maximumFileSize value="5MB" />
      <staticLogFileName value="true" />-->
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%date %level [%thread] %type.%method - %message%n" />
      </layout>
    </appender>
    <root>
      <level value="All" />
      <!-- If the following line is not included the log file 
      will not be created even if log4net is configured with this file. -->
      <appender-ref ref="TestAppender" />
    </root>
  </log4net>
  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5.2" />
  </startup>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="log4net" publicKeyToken="669e0ddf0bb1aa2a" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-1.2.15.0" newVersion="1.2.15.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
  <system.web>
    <membership defaultProvider="ClientAuthenticationMembershipProvider">
      <providers>
        <add name="ClientAuthenticationMembershipProvider" type="System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider, System.Web.Extensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" serviceUri="" />
      </providers>
    </membership>
    <roleManager defaultProvider="ClientRoleProvider" enabled="true">
      <providers>
        <add name="ClientRoleProvider" type="System.Web.ClientServices.Providers.ClientRoleProvider, System.Web.Extensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" serviceUri="" cacheTimeout="86400" />
      </providers>
    </roleManager>
  </system.web>
</configuration>